{"ast":null,"code":"import { GET_CATEGORIES, CATEGORIES_ERROR } from '../type';\nimport axios from 'axios';\nexport const getCategories = () => async dispatch => {\n  const baseURL = 'http://git.bigbek.com/-/snippets/2/raw/master/tv_show_list.json`';\n\n  try {\n    const res = await axios.get(baseURL, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data,\n      crossorigin: true\n    });\n    console.log(res);\n  } catch (e) {\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: console.log(e)\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/CS, security practice/netflix-remastered/src/store/actions/categoriesActions.js"],"names":["GET_CATEGORIES","CATEGORIES_ERROR","axios","getCategories","dispatch","baseURL","res","get","headers","type","payload","data","crossorigin","console","log","e"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,gBAAxB,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,QAAMC,OAAO,GAAG,kEAAhB;;AAEC,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,OAAV,EAAmB;AACnCG,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wBAAgB;AAFT;AAD0B,KAAnB,CAAlB;AAMAJ,IAAAA,QAAQ,CAAE;AACNK,MAAAA,IAAI,EAAET,cADA;AAENU,MAAAA,OAAO,EAAEJ,GAAG,CAACK,IAFP;AAGNC,MAAAA,WAAW,EAAG;AAHR,KAAF,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACH,GAbD,CAcA,OAAMS,CAAN,EAAQ;AACJX,IAAAA,QAAQ,CAAE;AACNK,MAAAA,IAAI,EAAER,gBADA;AAENS,MAAAA,OAAO,EAAEG,OAAO,CAACC,GAAR,CAAYC,CAAZ;AAFH,KAAF,CAAR;AAIH;AAEJ,CAxBM","sourcesContent":["import {GET_CATEGORIES, CATEGORIES_ERROR} from '../type'\r\nimport axios from 'axios'\r\n\r\nexport const getCategories = () => async dispatch => {\r\n   const baseURL = 'http://git.bigbek.com/-/snippets/2/raw/master/tv_show_list.json`'\r\n\r\n    try{\r\n        const res = await axios.get(baseURL, {\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        dispatch( {\r\n            type: GET_CATEGORIES,\r\n            payload: res.data,\r\n            crossorigin : true\r\n        })\r\n        console.log(res)\r\n    }\r\n    catch(e){\r\n        dispatch( {\r\n            type: CATEGORIES_ERROR,\r\n            payload: console.log(e),\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}